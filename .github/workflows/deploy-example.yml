name: 'Create release'
# Controls when the action will run.
on:
  repository_dispatch:
    # this is the event_type passed in from the webhook, needs to match exactly what was defined in the webhook custom data payload
    types: ["trigger-deployment"]
  workflow_dispatch:
jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      app_file_path: ${{ steps.get_path.outputs.path }}
    steps:
      - name: Print JIRA ticket number and environment
        run: |
          echo Ticket ${{ github.event.client_payload.issue }}
          echo Ticket ID ${{ github.event.client_payload.issue_id }}
          echo Version ${{ github.event.client_payload.to_version }}
          echo Service ${{ github.event.client_payload.service }}
      - name: Get file path
        id: get_path
        run: |
          echo "path=$(yq '.${{github.event.client_payload.service}}.appfile_prod' ./deployment-mapping.yml" >> $GITHUB_OUTPUT
  start-deployment:
    runs-on: ubuntu-latest
    needs:
    - init
    steps:
      - name: Checkout PE
        uses: actions/checkout@v3
        with:
          ref: deploy
          persist-credentials: true
          repository: Vungle/PE
          token: ${{secrets.GH_TOKEN }}
          fetch-depth: 0
      - name: yq - portable yaml processor
        uses: mikefarah/yq@v4.29.2
      - name: Update chart versions
        run: |
          yq -i e '.spec.template.spec.source.targetRevision = "${{ github.event.client_payload.to_version }}"' ${{needs.init.outputs.app_file_path}}

      - name: Commit version update changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ./apps/api/*
          git commit -m "Update chart version to ${{ github.event.client_payload.to_version }}" --allow-empty
          git push -f origin deploy
        working-directory: pe

