name: Create release
on:
  release:
    types: [published]
permissions:
  id-token: write
  contents: write
  packages: write
  pull-requests: read
env:
  BASE_DIR: _ops/charts
  SERVICE: slydell
jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Get version
        id: version
        run: echo "version=$(echo ${{ github.ref }} | cut -d/ -f3)" >> $GITHUB_OUTPUT
  build-images:
    needs: 
      - init
    strategy:
      matrix:
        api:
          - admin
          - alert
          - auth
          - authenticator
          - cron
          - manage
          - mediation
          - metadata
          - metacrawlwer
          - processor
          - reporting
          - salesforce
          - scheduler
          - verifyvault
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "api ${{matrix.api}} from ${{needs.init.outputs.version}}"
        
    
  package-chart:
    needs: 
      - init
      - build-images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Update Chart.yaml
        run: |
          yq -i e '.version = "${{ needs.init.outputs.version }}",.appVersion = "${{ needs.init.outputs.version }}"' ${{ env.BASE_DIR }}/${{env.SERVICE}}/Chart.yaml
      - name: Update image.tag
        run: |
          yq -i e '.image.tag = "${{ needs.init.outputs.version }}"' ${{ env.BASE_DIR }}/${{env.SERVICE}}/values.yaml
     
      - name: Package and push helm chart to Amazon ECR
        run: |
          helm package ${{ env.BASE_DIR }}/${{env.SERVICE}}
     