name: Build and Publish Images
run-name: ${{inputs.application}} - ${{inputs.image_tag}} - ${{inputs.git_ref}}

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: Tag for both amd64 and multi-arch. For example, v1.251.0, PR-xxx.
        type: string
        required: true
      git_ref:
        description: The commit/branch/tag we build for. Keep empty to use default branch.
        type: string
      service:
        description: The service we build for.
        type: string
        required: true
      environment:
        description: Target environment
        type: choice
        options:
          - qa
          - stage
          - production
        required: true
        default: "qa"
  workflow_call:
    inputs:
      image_tag:
        description: Tag for both amd64 and multi-arch. For example, v1.251.0, PR-xxx.
        type: string
        required: true
      git_ref:
        description: The commit/branch/tag we build for. Keep empty to use default branch.
        type: string
        required: true
      service:
        description: The service we build for.
        type: string
        required: true
      environment:
        description: Target environment
        type: string
        required: true
        default: "qa"
permissions:
  id-token: write
  contents: write
  # https://stackoverflow.com/questions/72248956/github-action-with-docker-makes-error-exporting-to-image-403-forbidden-error
  packages: write
  pull-requests: read
env:
  HELM_EXPERIMENTAL_OCI: 1

jobs:
  build-and-publish:
    name: Build and Publish Images
    runs-on: ubuntu-latest
    steps:
      - name: Check out Repository Code
        uses: actions/checkout@v3  # https://github.com/actions/checkout
        with:
          ref: ${{inputs.git_ref}}
      - run: |
          echo "Building and Publishing Images with tag ${{inputs.image_tag}} from ${{inputs.git_ref}}"
      - name: Assume github action role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "arn:aws:iam::320005014399:role/github-action"
          aws-region: us-east-1
          mask-aws-account-id: false
          role-session-name: github-action

      - name: Assume ecr-push role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
          role-to-assume: "arn:aws:iam::320005014399:role/ecr-push"
          role-skip-session-tagging: true
          role-duration-seconds: 3600
          aws-region: us-east-1
      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{inputs.git_ref}}
      - name: Get short SHA
        id: short-sha
        shell: bash
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT  
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.action
          push: true
          build-args: |
            SERVICE=${{ inputs.service }} 
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/slydell-${{ inputs.service }}:${{inputs.environment}}-${{ steps.short-sha.outputs.sha_short }}
          labels: | 
            org.opencontainers.image.source=https://github.com/Vungle/slydell
            org.opencontainers.image.title=Slydell ${{ inputs.service }}
            org.opencontainers.image.version=${{inputs.environment}}-${{ steps.short-sha.outputs.sha_short }}
            org.opencontainers.image.vendor=Liftoff  
