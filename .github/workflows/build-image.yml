name: Build and Publish Images
on:
  workflow_dispatch: 
permissions:
  id-token: write
  contents: write
  # https://stackoverflow.com/questions/72248956/github-action-with-docker-makes-error-exporting-to-image-403-forbidden-error
  packages: write
  pull-requests: read
env:
  HELM_EXPERIMENTAL_OCI: 1

jobs:
  build-and-publish:
    name: Build and Publish Images
    runs-on: ubuntu-latest
    steps:
      - name: Check out Repository Code
        uses: actions/checkout@v4
        with:
          repository: 'Vungle/slydell'
          token: ${{ secrets.GH_TOKEN }}
          ref: dev
          path: /home/runner/work/github-actions/github-actions/data/go/src/github.com/Vungle/slydell
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21' # The Go version to download (if necessary) and use.
      - name: ssh-agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.PRIVATE_KEY }}
      - run: go version
      - name: Install brotli
        run: | 
          ls -la /usr/local/lib
          ls -la /usr/local/include
          ls -la /usr/local
          ls -la /usr
          git clone --depth 1 --branch v1.1.0 https://github.com/google/brotli.git
          cd brotli
          mkdir out && cd out
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=./installed ..
          cmake --build . --config Release --target install
          mkdir /usr/local/include -p
          mkdir /usr/local/lib -p
          echo $(pwd)
          cp -r ./brotli/out/installed/lib/libbrotli* /usr/local/lib/. && \
          cp -r ./brotli/out/installed/include/brotli /usr/local/include/.
          rm -rf brotli
      - name: Setup build env
        run: |
          echo $HOME
          echo $GITHUB_WORKSPACE
          git config --global url.ssh://git@github.com/.insteadOf https://github.com/
      - name: Go build
        working-directory: /home/runner/work/github-actions/github-actions/data/go/src/github.com/Vungle/slydell
        env: 
          GO111MODULE: on
          GOPRIVATE: github.com/Vungle/*
          GOPATH: /home/runner/work/github-actions/github-actions/data/go
        run: |
          CGO_ENABLED=1 GOOS=linux go build -o  /home/runner/work/github-actions/github-actions/data/go/bin/slydell/admin api/admincmd/admin-server/main.go
          




FROM golang:1.21-alpine

ENV GOPATH=/data/go
ENV GO111MODULE=on
ENV GOPRIVATE=github.com/Vungle/*

WORKDIR /data/go/src/github.com/Vungle/slydell
COPY . .

# for cron service
RUN mkdir -p /tmp/uploads/
RUN chmod 666 /tmp/uploads/

RUN apk update && \
    apk upgrade && \
    apk add git bash curl openssh-client make cmake g++ && \
    rm -rf /var/cache/apk/*

RUN git clone --depth 1 --branch v1.1.0 https://github.com/google/brotli.git
RUN cd brotli && \
    mkdir out && cd out && \
    cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=./installed .. && \
    cmake --build . --config Release --target install
RUN mkdir /usr/local/include -p && \
    mkdir /usr/local/lib -p
RUN echo $(pwd)
RUN cp -r ./brotli/out/installed/lib/libbrotli* /usr/local/lib/. && \
    cp -r ./brotli/out/installed/include/brotli /usr/local/include/.
RUN rm -rf brotli

# Download public key for github.com
RUN git config --global url.ssh://git@github.com/.insteadOf https://github.com/
RUN mkdir -p -m 0700 ~/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts


RUN --mount=type=ssh go mod download
RUN CGO_ENABLED=1 GOOS=linux go build -o /data/go/bin/slydell/@@SERVICE@@ api/@@SERVICE@@/cmd/@@SERVICE@@-server/main.go

# status checking for kubernetes probe
EXPOSE 80

ENTRYPOINT [ "/data/go/bin/slydell/@@SERVICE@@" ]
