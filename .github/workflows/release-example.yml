name: 'Create release'
# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  release:
    types: [published]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  CHART_DIR: example/helm/example
  CHART: example

jobs:
  get-info:
    name: Get release info
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.release.outputs.version }}
      commit-id: ${{ steps.commit-id.outputs.sha_short }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get release
        id: release
        run: |
          echo "version=$(echo ${{ github.ref }} | cut -d/ -f3)" >> $GITHUB_OUTPUT
      - name: Get commit SHA
        id: commit-id
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
  publish-helm:
    name: Publish Helm chart
    runs-on: ubuntu-latest
    needs:
    - get-info
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - run: echo ${{ steps.login-ecr.outputs.registry }}
      - name: Package and push helm chart to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          helm package ${{env.CHART_DIR}}
          helm push ${{env.CHART}}-${{ needs.get-info.outputs.version }}.tgz oci://$REGISTRY/charts
      - name: Tag chart with commit id
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          skopeo copy oci://$REGISTRY/charts/${{env.CHART}}:${{ needs.get-info.outputs.version }} oci://oci://$REGISTRY/charts/${{env.CHART}}:${{ needs.get-info.outputs.version }}-${{ needs.get-info.outputs.commit-id}}
  publish-image:
    name: Publish container image
    runs-on: ubuntu-latest
    needs:
    - get-info
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          logout: false
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build image
        uses: docker/build-push-action@v3
        with:
          context: ./example/docker
          push: true
          file: ./example/docker/Dockerfile
          platforms: linux/amd64
          tags: |
            teroahonen/rollout:${{needs.get-info.outputs.version}}

